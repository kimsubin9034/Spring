package com.condingbox.core3.basic.thymeleaf;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.condingbox.core3.basic.User;

import jakarta.servlet.http.HttpSession;

@Controller
@RequestMapping("/basic")
public class BasicController {
	
	@GetMapping("text-basic")
	public String textBasic(Model model) {
		model.addAttribute("data", "Hello Spring");
		//model.addAttribute("data", "<b>Hello Spring</b>");
		return "basic/text-basic";
	}
	
	@GetMapping("text-unescaped")
	public String textunescaped(Model model) {
		model.addAttribute("data", "Hello Spring");
		//model.addAttribute("data", "<b>Hello Spring</b>");
		return "basic/text-unescaped";
	}
	
	@GetMapping("text-variable")
	public String textvariable(Model model) {
		User userA = new User("UserA", 10);
		User userB = new User("UserB", 20);
		
		List<User> list = new ArrayList<>();
		list.add(userA);
		list.add(userB);
		
		Map<String , User> map= new  HashMap<String,User>();
		map.put("UserA", userA);
		map.put("UserB", userB);
		
		model.addAttribute("user", userA);
		model.addAttribute("users",list);
		model.addAttribute("userMap", map);
		
		return "basic/variable";
	}
	
	
	
	@GetMapping("basic-objects")
	public String basicObjects(HttpSession session) {
		session.setAttribute("sessionData", "session!!!");
		return "basic/basic-objects";
	}
	
	@GetMapping("/data")
	public String data(Model model) {
		model.addAttribute("localDateTime", LocalDateTime.now());
		return "basic/date";
	}
	
	@GetMapping("/link")
	public String link(Model model) {
		model.addAttribute("param1", "data");
		return "basic/link";
	}

	@GetMapping("/literal")
	public String literal(Model model) {
		model.addAttribute("data", "spring");
		return "basic/literal";
	}
	
	@GetMapping("/operation")
	public String operation(Model model) {
		model.addAttribute("data", "spring");
		return "basic/operation";
	}
	
	@GetMapping("/attribute")
	public String attribute() {
		return "basic/attribute";
	}
	
	@GetMapping("/each")
	public String each(Model model) {
		addUsers(model);		
		return "basic/each";
	}
	
	public void addUsers(Model model) {
		List<User> list = new ArrayList<>();
		list.add(new User("userA", 10));
		list.add(new User("userB", 10));
		list.add(new User("userC", 10));
		model.addAttribute("users",list);
	}
	
	@GetMapping("/condition")
	public String condition() {
		return "basic/condition";
	}
}
